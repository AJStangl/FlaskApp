{% extends "base.html" %}

{% block content %}
    <div class="container">
        <div class="container-fluid">
            <div><p>number of images remaining: {{ num_remaining }}</p></div>
        </div>
        <div class="container-fluid">
            <div class="mb-3">
                <button id=accept class="btn btn-primary" onclick="accept()">Accept</button>
                <button id=reject class="btn btn-warning" onclick="reject()">Reject</button>
                <button id=skip class="btn btn-secondary" onclick="sendForAnalysis()">Send For Analysis</button>
            </div>
        </div>
        <div id="image-grid" class="image-grid">
            <div class="container-fluid">
                {#  Smart Crop Thumbnail  #}
                <div id="smart-crop">
                    <div class="image-container">
                        <div id="smart-indication" hidden></div>
                        <div class="image-wrapper" id="smart-wrapper" onclick="showFullscreenImage('{{ thumbnail_path }}')">
                            <img src="{{ thumbnail_path }}" alt="Smart Crop">
                            <div class="image-label">Primary Thumbnail</div>
                        </div>
                        <input id="smart" value=true onchange="validateInput('smart')" onload="validateInput('smart')"
                               hidden>
                    </div>
                    <div class="mb-3">
                        <button class="btn btn-primary" onclick="acceptImage('smart')">Accept</button>
                        <button class="btn btn-danger" onclick="rejectImage('smart')">Reject</button>
                        <button id="smart-hide" class="btn btn-info" onclick="toggleHide('smart')">Revel Hidden Image</button>
                    </div>
                    <div class="mb-3">
                        <label for="smart-caption" class="form-label">Blip Caption</label>
                        <textarea class="form-control" id="smart-caption" rows="3"
                                  onclick="copytext()">{{ thumbnail_caption }}</textarea>
                    </div>
                </div>
                {#  Azure Thumbnail      #}
                <div id="azure-thumbnail">
                    <div class="image-container">
                        <div id="azure-indication" hidden></div>
                        <div class="image-wrapper" id="azure-wrapper" onclick="showFullscreenImage('{{ azure_thumbnail }}')">
                            <img src="{{ azure_thumbnail }}" alt="Azure Crop">
                            <div class="image-label">Azure Crop</div>
                        </div>
                        <input id="azure" value=true onchange="validateInput('azure')" onload="validateInput('azure')"
                               hidden>
                    </div>
                    <div class="mb-3">
                        <button class="btn btn-primary" onclick="acceptImage('azure')">Accept</button>
                        <button class="btn btn-danger" onclick="rejectImage('azure')">Reject</button>
                        <button id="azure-hide" class="btn btn-info" onclick="toggleHide('azure')">Revel Hidden Image</button>
                    </div>
                    <div class="mb-3">
                        <label for="azure-caption" class="form-label">Azure Caption</label>
                        <textarea class="form-control" id="azure-caption" rows="3"
                                  onclick="copytext()">{{ azure_caption }}</textarea>
                    </div>
                </div>
                {#  Pil Thumbnail       #}
                <div id="pil-thumbnail">
                    <div class="image-container">
                        <div id="pil-indication" hidden></div>
                        <div class="image-wrapper" id="pil-wrapper" onclick="showFullscreenImage('{{ pil_thumbnail }}')">
                            <img src="{{ pil_thumbnail }}" alt="PIL Thumbnail">
                            <div class="image-label">PIL Thumbnail</div>
                        </div>
                        <input id="pil" value=true onchange="validateInput('pil')" onload="validateInput('pil')"
                               hidden>
                    </div>
                    <div class="mb-3">
                        <button class="btn btn-primary" onclick="acceptImage('pil')">Accept</button>
                        <button class="btn btn-danger" onclick="rejectImage('pil')">Reject</button>
                        <button id="smart-hide" class="btn btn-info" onclick="toggleHide('pil')">Revel Hidden Image</button>
                    </div>
                    <div class="mb-3">
                        <label for="pil-caption" class="form-label">PIL Caption</label>
                        <textarea class="form-control" id="reddit-caption" rows="3"
                                  onclick="copytext()">{{ pil_caption }}</textarea>
                    </div>
                </div>
            </div>
            {#      Overall Caption      #}
            <div id="overall-caption" class="container-fluid">
                <div class="mb-3">
                    <label for="best-caption" class="form-label">Best Caption</label>
                    <input type="text" class="form-control" id="best-caption" placeholder="{{ reddit_caption }}">
                </div>
            </div>
        </div>
        <div class="loading-container" hidden>
            <div class="loading-icon"></div>
        </div>
    </div>

    <style>
        .image-grid {
            display: grid;
            padding: 5px;
        }

        .image-grid img {
            width: 100%;
            height: auto;
            cursor: pointer;
        }

        .image-container {
            display: flex;
        }

        .image-container .image-wrapper {
            position: relative;
            width: 100%;
            height: auto;
            overflow: hidden;
        }

        .image-container .image-label {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            color: #fff;
            text-align: center;
            font-size: 14px;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 9999;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.9);
            overflow: auto;
        }

        .modal-content {
            display: inline;
        }

        .modal-content img {
            display: inline;
            max-width: 100%;
            max-height: 100%;
            cursor: zoom-in;
        }

        .modal-content img.zoomed {
            cursor: zoom-out;
            max-width: none;
            max-height: none;
        }

        .modal-buttons {
            margin-top: 10px;
        }

        .modal-buttons button {
            margin: 5px;
        }

        .warning {
            border: 2px solid red;
        }

        .success {
            border: 2px solid green;
        }
    </style>
    <script>
    function sendForAnalysis() {
            $.ajax({
                url: "/secondary/analysis/",
                type: "POST",
                header: {
                    "content-type": "application/json"
                },
                data: {
                    "image_id": "{{ content.id }}",
                    "subreddit": "{{ content.subreddit }}",
                    "action": "accept",
                },
                success: function (data) {
                    window.location.href = data.redirect;
                }
            });
        }

        function setTag(i) {
            let relevant_tag_selector = '#relevant-tag-' + i
            let id = $(relevant_tag_selector).attr('id');
            let thing = document.getElementById(id);
            let checked = thing.checked;

            let text_id_selector = '#tag-text-' + i
            let text_id = $(text_id_selector).attr('id');
            let text_thing = document.getElementById(text_id);
            let text = text_thing.innerHTML;
            if (checked) {
                $(relevant_tag_selector).val(text);
            } else {
                $(relevant_tag_selector).val("");
            }
        }

        function setCaptions(i) {
            let additional_caption_selector = '#additional-caption-' + i;
            let id = $(additional_caption_selector).attr('id');
            let thing = document.getElementById(id);
            let checked = thing.checked;

            let caption_text_selector = '#caption-text-' + i;
            let text_id = $(caption_text_selector).attr('id');
            let text_thing = document.getElementById(text_id);
            let text = text_thing.innerHTML;
            if (checked) {
                $(additional_caption_selector).val(text);
            } else {
                $(additional_caption_selector).val("");
            }
        }

        function accept() {
            showLoadingIndication();
            sendRequest("accept");
        }

        function reject() {
            showLoadingIndication();
            sendRequest("reject");
        }

        function showLoadingIndication() {
            document.getElementsByClassName("loading-container")[0].hidden = false;
            const button = document.getElementById("accept");
            button.disabled = true;
            button.hidden = true;

            const button2 = document.getElementById("reject");
            button2.disabled = true;
            button2.hidden = true;

            const button3 = document.getElementById("skip");
            button3.disabled = true;
            button3.hidden = true;

            const image_container = document.getElementById("image-grid");
            image_container.hidden = true;
        }

        function sendRequest(status) {
            const captions = [];
            const tags = [];
            {% for i in range(content.dense_captions | length) %}
                var additional_caption_id = $('#additional-caption-{{ i }}').attr('id');
                var additional_caption_element = document.getElementById(additional_caption_id);
                var additional_caption_element_checked = additional_caption_element.checked;
                if (additional_caption_element_checked) {
                    let data = $('#additional-caption-{{ i }}').val();
                    captions.push(data);
                }
            {% endfor %}
            {% for i in range(content.tags | length) %}
                var id_for_tag = $('#relevant-tag-{{ i }}').attr('id');
                var element_for_check_box = document.getElementById(id_for_tag);
                var checked_tag = element_for_check_box.checked;
                if (checked_tag) {
                    let data = $('#relevant-tag-{{ i }}').val();
                    tags.push(data);
                }
            {% endfor %}

            $.ajax({
                url: "/secondary/curate/",
                type: "POST",
                header: {
                    "content-type": "application/json"
                },
                data: {
                    "id": "{{ content.id }}",
                    "subreddit": "{{ content.subreddit }}",
                    "action": status,
                    "additional_captions": captions.join(','),
                    "additional_tags": tags.join(','),
                    "pil_crop_accept": $('#pil').val(),
                    "reddit_caption": $('#reddit-caption').val(),
                    "azure_crop_accept": $('#azure').val(),
                    "azure_caption": $('#azure-caption').val(),
                    "smart_crop_accept": $('#smart').val(),
                    "smart_caption": $('#smart-caption').val(),
                    "best_caption": $('#best-caption').val()
                },
                success: function (data) {
                    window.location.href = data.redirect;
                }
            });
        }
    </script>
    <script>

        function toggleHide(thing) {
            console.log("In toggleHide")
            console.log(thing)
            var target_id = thing + "-wrapper";
            var inputElement = document.getElementById(target_id);
            inputElement.hidden = !inputElement.hidden;
            return;
        }
        function validateInput() {
            var id = event.target.id;
            var target_id = id + "-wrapper";

            var event_accept = event.target.value;
            var inputElement = document.getElementById(target_id);

            var indication_id = document.getElementById(id + "-indication");
            {#indication_id.hidden = false;#}
            indication_id.innerHTML = event_accept;

            if (event_accept === false || event_accept === "false") {
                inputElement.classList.remove("success");
                inputElement.classList.add("warning");
                {#inputElement.hidden = true;#}
                return;
            }
            if (event_accept === true || event_accept === "true") {
                inputElement.classList.remove("warning");
                inputElement.classList.add("success");
                {#inputElement.hidden = true;#}
                return;
            }
            {#inputElement.hidden = true;#}
            inputElement.classList.remove("success");
            inputElement.classList.add("warning");
            return;

        }
    </script>
    <script>
        function copytext() {
            var id = event.target.id;
            navigator.clipboard.readText().then(() => {
                const target_value = document.getElementById(id).value;
                navigator.clipboard.writeText(target_value);
            });
        }
    </script>
    <script>
        function acceptImage(elementName) {
            var element = document.getElementById(elementName);
            element.setAttribute('value', 'true')
            var event = new Event('change');
            element.dispatchEvent(event);
        }

        function rejectImage(elementName) {
            var element = document.getElementById(elementName);
            element.setAttribute('value', 'false')
            var event = new Event('change');
            element.dispatchEvent(event);
        }
    </script>


{% endblock %}